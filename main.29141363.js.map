{"version":3,"sources":["scripts/main.js"],"names":["employees","document","querySelector","sortList","list","converToNumber","number","split","join","slice","result","children","sort","a","b","dataset","salary","append","getEmployees","map","el","name","innerText"],"mappings":";AAAA,aAsBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApBA,IAAMA,EAAYC,SAASC,cAAc,MAEzC,SAASC,EAASC,GACPC,SAAAA,EAAeC,GACf,OAACA,EAAOC,MAAM,KAAKC,KAAK,IAAIC,MAAM,GAGrCC,IAAAA,EAAS,EAAIN,EAAKO,UAAUC,KAAK,SAACC,EAAGC,GACzCT,OAAAA,EAAeS,EAAEC,QAAQC,QAAUX,EAAeQ,EAAEE,QAAQC,UAE9DhB,EAAUiB,OAAVjB,MAAAA,EAAoBU,EAAAA,IAGtB,SAASQ,EAAad,GAChBA,EAAAA,EAAKO,UAAUQ,IAAI,SAAAC,GAAE,OAAA,EAAA,CACvBC,KAAMD,EAAGE,WAAcF,EAAGL,WAI9BZ,EAASH,GACTkB,EAAalB","file":"main.29141363.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst employees = document.querySelector('ul');\r\n\r\nfunction sortList(list) {\r\n  function converToNumber(number) {\r\n    return +number.split(',').join('').slice(1);\r\n  }\r\n\r\n  const result = [...list.children].sort((a, b) =>\r\n    converToNumber(b.dataset.salary) - converToNumber(a.dataset.salary));\r\n\r\n  employees.append(...result);\r\n}\r\n\r\nfunction getEmployees(list) {\r\n  [...list.children].map(el => ({\r\n    name: el.innerText, ...el.dataset,\r\n  }));\r\n}\r\n\r\nsortList(employees);\r\ngetEmployees(employees);\r\n"]}